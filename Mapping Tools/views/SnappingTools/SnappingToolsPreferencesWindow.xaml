<Window x:Uid="Window_1" x:Class="Mapping_Tools.Views.SnappingTools.SnappingToolsPreferencesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:components="clr-namespace:Mapping_Tools.Components.Domain"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:components1="clr-namespace:Mapping_Tools.Components"
        xmlns:serialization="clr-namespace:Mapping_Tools.Classes.Tools.SnappingTools.Serialization"
        mc:Ignorable="d"
        Title="Snapping Tools Preferences" Height="500" Width="570" MinWidth="575" MinHeight="360"
        WindowStyle="None"
        ResizeMode="CanResize"
        AllowsTransparency="False"
        WindowStartupLocation="CenterScreen"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto" Background="{DynamicResource MaterialDesignPaper}"
        d:DataContext="{d:DesignData SnappingToolsPreferences}">

    <WindowChrome.WindowChrome>
        <WindowChrome 
            x:Uid="WindowChrome_1" CaptionHeight="35"
            ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <components:EnumToBoolConverter x:Uid="components:EnumToBoolConverter_1" x:Key="EnumToBoolConverter"/>
        <components:FlagToBoolConverter x:Uid="components:FlagToBoolConverter_1" x:Key="FlagToBoolConverter"/>
        <components:DoubleToStringConverter x:Uid="components:DoubleToStringConverter_1" x:Key="DoubleToStringConverter"/>
        <components:IntToStringConverter x:Uid="components:IntToStringConverter_1" x:Key="IntToStringConverter"/>
    </Window.Resources>

    <Grid x:Uid="Grid_1">
        <Grid.RowDefinitions>
            <RowDefinition x:Uid="RowDefinition_1" Height="Auto"/>
            <RowDefinition x:Uid="RowDefinition_2" Height="*"/>
            <RowDefinition x:Uid="RowDefinition_3" Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid x:Uid="FirstGrid" x:Name="FirstGrid" Grid.Row="0">
            <StackPanel x:Uid="StackPanel_1" WindowChrome.IsHitTestVisibleInChrome="false" HorizontalAlignment="Left" Orientation="Horizontal">
                <materialDesign:ColorZone x:Uid="materialDesign:ColorZone_1" Width="24" Height="24" Margin="9,6,0,0" Mode="Inverted">
                    <materialDesign:ColorZone.OpacityMask>
                        <ImageBrush x:Uid="ImageBrush_1" ImageSource="/Data/mt_logo_white_24.png"/>
                    </materialDesign:ColorZone.OpacityMask>
                </materialDesign:ColorZone>
                <TextBlock x:Uid="Header" Name="Header" Text="Preferences" Foreground="{DynamicResource MaterialDesignBody}" Margin="8,11,0,0" FontWeight="Normal"/>
            </StackPanel>
            
            <StackPanel x:Uid="StackPanel_2" WindowChrome.IsHitTestVisibleInChrome="true" HorizontalAlignment="Right" Orientation="Horizontal">
                <Button x:Uid="Button_1" Style="{DynamicResource MaterialDesignFlatButton}" Content="{materialDesign:PackIcon WindowCLose}" Click="CancelButton_Click" HorizontalAlignment="Right" Height="35" Foreground="{DynamicResource MaterialDesignBody}"/>
            </StackPanel>
        </Grid>

        <ScrollViewer x:Uid="ScrollViewer_1" Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
            <Border x:Uid="Border_1" Padding="10">
                <StackPanel x:Uid="StackPanel_3">
                    <Border x:Uid="Border_2" Padding="5 10">
                        <StackPanel x:Uid="StackPanel_4">
                            <StackPanel x:Uid="StackPanel_5" Orientation="Horizontal" Margin="10">
                                <TextBlock x:Uid="TextBlock_1" Width="100" Text="Snap key" VerticalAlignment="Bottom" Margin="0 0 0 6" 
                                           ToolTip="Press and hold this key to snap your cursor to the closest virtual object."/>
                                <components1:HotkeyEditorControl x:Uid="components1:HotkeyEditorControl_1" Width="150" VerticalAlignment="Bottom" Hotkey="{Binding SnapHotkey}"
                                                                 ToolTip="Press and hold this key to snap your cursor to the closest virtual object."/>
                                <TextBlock x:Uid="TextBlock_2" Width="100" Text="Select key" VerticalAlignment="Bottom" Margin="10 0 0 6" 
                                           ToolTip="Press or hold this key to select virtual objects."/>
                                <components1:HotkeyEditorControl x:Uid="components1:HotkeyEditorControl_2" Width="150" VerticalAlignment="Bottom" Hotkey="{Binding SelectHotkey}"
                                                                 ToolTip="Press or hold this key to select virtual objects."/>
                            </StackPanel>
                            <StackPanel x:Uid="StackPanel_6" Orientation="Horizontal" Margin="10">
                                <TextBlock x:Uid="TextBlock_3" Width="100" Text="Lock key" VerticalAlignment="Bottom" Margin="0 0 0 6" 
                                           ToolTip="Press or hold this key to lock virtual objects."/>
                                <components1:HotkeyEditorControl x:Uid="components1:HotkeyEditorControl_3" Width="150" VerticalAlignment="Bottom" Hotkey="{Binding LockHotkey}"
                                                                 ToolTip="Press or hold this key to lock virtual objects."/>
                                <TextBlock x:Uid="TextBlock_4" Width="100" Text="Usability key" VerticalAlignment="Bottom" Margin="10 0 0 6" 
                                           ToolTip="Press or hold this key to select which virtual objects can get used by generators."/>
                                <components1:HotkeyEditorControl x:Uid="components1:HotkeyEditorControl_4" Width="150" VerticalAlignment="Bottom" Hotkey="{Binding InheritHotkey}"
                                                                 ToolTip="Press or hold this key to select which virtual objects can get used by generators."/>
                            </StackPanel>
                            <StackPanel x:Uid="StackPanel_7" Orientation="Horizontal" Margin="10">
                                <TextBlock x:Uid="TextBlock_5" Width="100" Text="Refresh key" VerticalAlignment="Bottom" Margin="0 0 0 6"
                                           ToolTip="Press or hold this key to continuously refresh the hit objects in the root layer of the object tree."/>
                                <components1:HotkeyEditorControl x:Uid="components1:HotkeyEditorControl_5" Width="150" VerticalAlignment="Bottom" Hotkey="{Binding RefreshHotkey}"
                                                                 ToolTip="Press or hold this key to continuously refresh the hit objects in the root layer of the object tree."/>
                            </StackPanel>
                            <StackPanel x:Uid="StackPanel_8" Orientation="Horizontal" Margin="10">
                                <TextBlock x:Uid="TextBlock_6" Width="100" Margin="0 0 0 6" Text="Offset" VerticalAlignment="Bottom" ToolTip="Offsets the overlay box. Use this field when the automatic editor-to-screen coordinate conversion seems to fail. Enable Debug mode to see the overlay box."/>
                                <TextBox x:Uid="TextBox_1" Text="{Binding OffsetLeft, Converter={StaticResource DoubleToStringConverter}}" Width="95" VerticalAlignment="Bottom" 
                                         materialDesign:HintAssist.Hint="Left offset" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="0 0 10 0"
                                         ToolTip="Input the offset for the left side of the overlay."/>
                                <TextBox x:Uid="TextBox_2" Text="{Binding OffsetTop, Converter={StaticResource DoubleToStringConverter}}" Width="95" VerticalAlignment="Bottom" 
                                         materialDesign:HintAssist.Hint="Top offset" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="0 0 10 0"
                                         ToolTip="Input the offset for the top side of the overlay."/>
                                <TextBox x:Uid="TextBox_3" Text="{Binding OffsetRight, Converter={StaticResource DoubleToStringConverter}}" Width="95" VerticalAlignment="Bottom" 
                                         materialDesign:HintAssist.Hint="Right offset" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="0 0 10 0"
                                         ToolTip="Input the offset for the right side of the overlay."/>
                                <TextBox x:Uid="TextBox_4" Text="{Binding OffsetBottom, Converter={StaticResource DoubleToStringConverter}}" Width="95" VerticalAlignment="Bottom" 
                                         materialDesign:HintAssist.Hint="Bottom offset" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                         ToolTip="Input the offset for the bottom side of the overlay."/>
                            </StackPanel>
                            <StackPanel x:Uid="StackPanel_9" Orientation="Horizontal" Margin="10">
                                <TextBlock x:Uid="TextBlock_7" Width="100" Margin="0 0 0 6" Text="Complexity" VerticalAlignment="Bottom" 
                                           ToolTip="Specifies how many layers of virtual objects can be used. More layers means more recursion of generating virtual objects."/>
                                <TextBox x:Uid="TextBox_5" Text="{Binding InceptionLevel, Converter={StaticResource IntToStringConverter}}" Width="120" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Inception level" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                         ToolTip="Specifies how many layers of virtual objects can be used. More layers means more recursion of generating virtual objects. It is recommended to use between 2 and 10 layers."/>
                            </StackPanel>
                            <StackPanel x:Uid="StackPanel_10" Orientation="Horizontal" Margin="10">
                                <TextBlock x:Uid="TextBlock_8" Width="100" Margin="0 0 0 6" Text="Downkey" VerticalAlignment="Center"
                                           ToolTip="Customize what gets displayed while the Snap Key is pressed."/>
                                <ListBox x:Uid="ListBox_1" SelectionMode="Extended" SelectionChanged="KeyDownViewModeSelector_OnSelectionChanged"
                                    Style="{StaticResource MaterialDesignToolToggleListBox}">
                                    <ListBoxItem x:Uid="ListBoxItem_1" ToolTip="Everything" Tag="{x:Static serialization:ViewMode.Everything}" IsSelected="{Binding KeyDownViewMode, Mode=OneTime, Converter={StaticResource FlagToBoolConverter}, ConverterParameter={x:Static serialization:ViewMode.Everything}}">
                                        <materialDesign:PackIcon x:Uid="materialDesign:PackIcon_1" Kind="AllInclusive"/>
                                    </ListBoxItem>
                                    <ListBoxItem x:Uid="ListBoxItem_2" ToolTip="Parents and parents of parents" Tag="{x:Static serialization:ViewMode.Parents}" IsSelected="{Binding KeyDownViewMode, Mode=OneTime, Converter={StaticResource FlagToBoolConverter}, ConverterParameter={x:Static serialization:ViewMode.Parents}}">
                                        P
                                    </ListBoxItem>
                                    <ListBoxItem x:Uid="ListBoxItem_3" ToolTip="Direct parents" Tag="{x:Static serialization:ViewMode.DirectParents}" IsSelected="{Binding KeyDownViewMode, Mode=OneTime, Converter={StaticResource FlagToBoolConverter}, ConverterParameter={x:Static serialization:ViewMode.DirectParents}}">
                                        DP
                                    </ListBoxItem>
                                    <ListBoxItem x:Uid="ListBoxItem_4" ToolTip="Children and children of children"  Tag="{x:Static serialization:ViewMode.Children}" IsSelected="{Binding KeyDownViewMode, Mode=OneTime, Converter={StaticResource FlagToBoolConverter}, ConverterParameter={x:Static serialization:ViewMode.Children}}">
                                        C
                                    </ListBoxItem>
                                    <ListBoxItem x:Uid="ListBoxItem_5" ToolTip="Direct children"  Tag="{x:Static serialization:ViewMode.DirectChildren}" IsSelected="{Binding KeyDownViewMode, Mode=OneTime, Converter={StaticResource FlagToBoolConverter}, ConverterParameter={x:Static serialization:ViewMode.DirectChildren}}">
                                        DC
                                    </ListBoxItem>
                                </ListBox>
                            </StackPanel>
                            <StackPanel x:Uid="StackPanel_11" Orientation="Horizontal" Margin="10">
                                <TextBlock x:Uid="TextBlock_9" Width="100" Margin="0 0 0 6" Text="Upkey" VerticalAlignment="Center" 
                                           ToolTip="Customize what gets displayed while the Snap Key is not pressed."/>
                                <StackPanel x:Uid="StackPanel_12">
                                    <RadioButton x:Uid="RadioButton_1" IsChecked="{Binding KeyUpViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:ViewMode.Everything}}"
                                                 Content="Everything" ToolTip="Default behavior. Display all virtual objects even if the Activation Key is not pressed."/>
                                    <RadioButton x:Uid="RadioButton_2" IsChecked="{Binding KeyUpViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:ViewMode.Nothing}}"
                                                 Content="Nothing" ToolTip="Do not display anything if the Activation Key is not pressed."/>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel x:Uid="StackPanel_13" Orientation="Horizontal" Margin="10">
                                <TextBlock x:Uid="TextBlock_10" Width="100" Margin="0 0 0 6" Text="Selection" VerticalAlignment="Center" 
                                           ToolTip="Customize which hit objects get used for generating virtual objects."/>
                                <StackPanel x:Uid="StackPanel_14">
                                    <RadioButton x:Uid="RadioButton_3" IsChecked="{Binding SelectedHitObjectMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:SelectedHitObjectMode.AllwaysAllVisible}}"
                                                 Content="All visible" ToolTip="Use the visible hit objects regardless of selection."/>
                                    <RadioButton x:Uid="RadioButton_4" IsChecked="{Binding SelectedHitObjectMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:SelectedHitObjectMode.VisibleOrSelected}}"
                                                 Content="Visible or selected" ToolTip="Use the visible hit objects, or use the selected hit objects if there are any selected."/>
                                    <RadioButton x:Uid="RadioButton_5" IsChecked="{Binding SelectedHitObjectMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:SelectedHitObjectMode.OnlySelected}}"
                                                 Content="Selected only" ToolTip="Exclusively use selected hit objects."/>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel x:Uid="StackPanel_15" Orientation="Horizontal" Margin="10">
                                <TextBlock x:Uid="TextBlock_11" Width="100" Margin="0 0 0 6" Text="Updating" VerticalAlignment="Center" 
                                           ToolTip="Customize on which events the virtual objects get updated."/>
                                <StackPanel x:Uid="StackPanel_16">
                                    <RadioButton x:Uid="RadioButton_6" IsChecked="{Binding UpdateMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:UpdateMode.AnyChange}}"
                                                 Content="Any change" ToolTip="Update whenever used hit objects get changed."/>
                                    <RadioButton x:Uid="RadioButton_7" IsChecked="{Binding UpdateMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:UpdateMode.TimeChange}}"
                                                 Content="Time change" ToolTip="Update whenever the editor changes time."/>
                                    <RadioButton x:Uid="RadioButton_8" IsChecked="{Binding UpdateMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:UpdateMode.OsuActivated}}"
                                                 Content="osu! activated" ToolTip="Update whenever the osu! window goes from an inactive state to an active state."/>
                                    <RadioButton x:Uid="RadioButton_9" IsChecked="{Binding UpdateMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static serialization:UpdateMode.HotkeyDown}}"
                                                 Content="Hotkey down" ToolTip="Update only when the refresh hotkey is down."/>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel x:Uid="StackPanel_17" Orientation="Horizontal" Margin="10">
                                <TextBlock x:Uid="TextBlock_12" Width="100" Margin="0 0 0 6" Text="Minimal diff" VerticalAlignment="Bottom" 
                                           ToolTip="Similar virtual objects get merged together to reduce clutter. This field sets the minimal difference that two objects must have to not get merged together."></TextBlock>
                                <TextBox x:Uid="TextBox_6" Text="{Binding AcceptableDifference, Converter={StaticResource DoubleToStringConverter}}" Width="150" 
                                         VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Minimal difference" 
                                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                         ToolTip="Similar virtual objects get merged together to reduce clutter. This field sets the minimal difference that two objects must have to not get merged together."/>
                            </StackPanel>
                            <StackPanel x:Uid="StackPanel_18" Orientation="Horizontal" Margin="10">
                                <TextBlock x:Uid="TextBlock_13" Width="100" Margin="0 0 0 6" Text="Keep running" VerticalAlignment="Center" 
                                           ToolTip="Keeps Geometry Dashboard running in the background while other tools are open."/>
                                <ToggleButton x:Uid="ToggleButton_1" IsChecked="{Binding KeepRunning}" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                              ToolTip="Keeps Geometry Dashboard running in the background while other tools are open."/>
                            </StackPanel>
                            <StackPanel x:Uid="StackPanel_19" Orientation="Horizontal" Margin="10">
                                <TextBlock x:Uid="TextBlock_14" Width="100" Margin="0 0 0 6" Text="See playfield" VerticalAlignment="Center" 
                                           ToolTip="Visualize boundary of the play area on the overlay."/>
                                <ToggleButton x:Uid="ToggleButton_2" IsChecked="{Binding VisiblePlayfieldBoundary}" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                              ToolTip="Visualize boundary of the play area on the overlay."/>
                            </StackPanel>
                            <StackPanel x:Uid="StackPanel_20" Orientation="Horizontal" Margin="10">
                                <TextBlock x:Uid="TextBlock_15" Width="100" Margin="0 0 0 6" Text="Debug" VerticalAlignment="Center" 
                                           ToolTip="Visualize boundaries of the overlay box for debugging purposes."/>
                                <ToggleButton x:Uid="ToggleButton_3" IsChecked="{Binding DebugEnabled}" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                              ToolTip="Visualize boundaries of the overlay box for debugging purposes."/>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                    
                    <ItemsControl x:Uid="ItemsControl_1" ItemsSource="{Binding RelevantObjectPreferences}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate x:Uid="DataTemplate_1">
                                <materialDesign:Card x:Uid="materialDesign:Card_1" Margin="0 0 0 5">
                                    <Expander x:Uid="Expander_1" Header="{Binding Key}" Foreground="{DynamicResource MaterialDesignBody}">
                                        <StackPanel x:Uid="StackPanel_21" Margin="20">
                                            <StackPanel x:Uid="StackPanel_22" Orientation="Horizontal">
                                                <TextBox x:Uid="TextBox_7" Text="{Binding Color, ElementName=ColorPicker}"
								                         Style="{StaticResource MaterialDesignFilledTextFieldTextBox}" materialDesign:HintAssist.Hint="Color HEX value"
								                         Width="120" Margin="2,0,10,2"/>
                                                <materialDesign:ColorPicker x:Uid="ColorPicker" Color="{Binding Value.Color}" x:Name="ColorPicker" Width="300"/>
                                            </StackPanel>

                                            <StackPanel x:Uid="StackPanel_23" Orientation="Horizontal">
                                                <TextBlock x:Uid="TextBlock_16" Text="Opacity" Width="120" VerticalAlignment="Center"/>
                                                <Slider x:Uid="OpacitySlider" x:Name="OpacitySlider" Width="300" TickFrequency="0.01" Orientation="Horizontal" Minimum="0" Maximum="1" Value="{Binding Value.Opacity, UpdateSourceTrigger=PropertyChanged}" Margin="5, 0" Style="{StaticResource MaterialDesignDiscreteSlider}"/>
                                                <TextBox x:Uid="OpacityTextbox" x:Name="OpacityTextbox" Width="40" Text="{Binding ElementName=OpacitySlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                            </StackPanel>

                                            <StackPanel x:Uid="StackPanel_24" Orientation="Horizontal">
                                                <TextBlock x:Uid="TextBlock_17" Text="Thickness" Width="120" VerticalAlignment="Center"/>
                                                <Slider x:Uid="ThicknessSlider" x:Name="ThicknessSlider" Width="300" TickFrequency="1" Orientation="Horizontal" Minimum="1" Maximum="10" Value="{Binding Value.Thickness, UpdateSourceTrigger=PropertyChanged}" Margin="5, 0" Style="{StaticResource MaterialDesignDiscreteSlider}"/>
                                                <TextBox x:Uid="ThicknessTextbox" x:Name="ThicknessTextbox" Width="40" Text="{Binding ElementName=ThicknessSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                            </StackPanel>

                                            <StackPanel x:Uid="StackPanel_25" Orientation="Horizontal">
                                                <TextBlock x:Uid="TextBlock_18" Text="DashStyle" Width="120" VerticalAlignment="Center"/>
                                                <ComboBox x:Uid="DashStyleCombobox" x:Name="DashStyleCombobox" Width="300" Margin="11,0" ItemsSource="{Binding Value.DashStylesEnumerable}" SelectedItem="{Binding Value.Dashstyle}"/>
                                            </StackPanel>

                                            <StackPanel x:Uid="StackPanel_26" Orientation="Horizontal" Visibility="{Binding Value.HasSizeOption, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <TextBlock x:Uid="TextBlock_19" Text="Size" Width="120" VerticalAlignment="Center"/>
                                                <Slider x:Uid="SizeSlider" x:Name="SizeSlider" Width="300" TickFrequency="1" Orientation="Horizontal" Minimum="1" Maximum="10" Value="{Binding Value.Size, UpdateSourceTrigger=PropertyChanged}" Margin="5, 0" Style="{StaticResource MaterialDesignDiscreteSlider}"/>
                                                <TextBox x:Uid="SizeTextbox" x:Name="SizeTextbox" Width="40" Text="{Binding ElementName=SizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </Expander>
                                </materialDesign:Card>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </Border>
        </ScrollViewer>


        <Border x:Uid="Border_3" Grid.Row="2" Padding="10">
            <Grid x:Uid="Grid_2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Uid="ColumnDefinition_1" Width="*" />
                    <ColumnDefinition x:Uid="ColumnDefinition_2" Width="*"/>
                </Grid.ColumnDefinitions>

                <Button x:Uid="ApplyButton" Grid.Column="0" Width="200" materialDesign:ButtonAssist.CornerRadius="10" x:Name="ApplyButton" Content="Apply" Click="ApplyButton_Click"/>
                <Button x:Uid="CancelButton" Grid.Column="1" Width="200" materialDesign:ButtonAssist.CornerRadius="10" x:Name="CancelButton" Content="Cancel" Click="CancelButton_Click"/>
            </Grid>
        </Border>

        <Border x:Uid="Border_4" BorderThickness="1" Grid.Row="0" Grid.RowSpan="3" Background="{x:Null}" BorderBrush="{DynamicResource PrimaryHueDarkBrush}"/>

    </Grid>

</Window>
