<local:SingleRunMappingTool x:Uid="This" x:Class="Mapping_Tools.Views.TimingHelper.TimingHelperView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Mapping_Tools.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:domain="clr-namespace:Mapping_Tools.Components.Domain"
             mc:Ignorable="d" 
             x:Name="This"
             d:DesignHeight="450" Width="759.5" d:DataContext="{d:DesignData TimingHelperVm}">
    <local:SingleRunMappingTool.Resources>
        <domain:DoubleToStringConverter x:Uid="domain:DoubleToStringConverter_1" x:Key="DoubleToStringConverter"/>
        <domain:BeatDivisorArrayToStringConverter x:Uid="domain:BeatDivisorArrayToStringConverter_1" x:Key="BeatDivisorArrayToStringConverter"/>
    </local:SingleRunMappingTool.Resources>
    <Grid x:Uid="MasterGrid" Name="MasterGrid">
        <Grid.RowDefinitions>
            <RowDefinition x:Uid="RowDefinition_1" Height="*"/>
            <RowDefinition x:Uid="RowDefinition_2" Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid x:Uid="FirstGrid" Name="FirstGrid" Grid.Row="0">
            <StackPanel x:Uid="StackPanel_1">
              <StackPanel x:Uid="StackPanel_2" Orientation="Horizontal">
                <TextBlock x:Uid="TextBlock_1" FontSize="40" FontWeight="Bold" Foreground="{DynamicResource PrimaryHueMidBrush}">
                  <Run x:Uid="Run_1" Text="Timing Helper"/>
                </TextBlock>
                    <materialDesign:PopupBox x:Uid="materialDesign:PopupBox_1" Margin="10" VerticalAlignment="Bottom" ToolTip="Click me!">
                  <materialDesign:PopupBox.ToggleContent>
                    <materialDesign:PackIcon x:Uid="materialDesign:PackIcon_1" Kind="HelpCircle" Width="24" Height="24" Foreground="{DynamicResource SecondaryAccentBrush}"/>
                  </materialDesign:PopupBox.ToggleContent>
                  <TextBlock x:Uid="TextBlock_2" TextWrapping="Wrap" MaxWidth="600" Padding="5">
                    Timing Helper is meant to speed up your timing job by placing the redlines for you. You only have to tell it exactly where all the sounds are.
                    <LineBreak x:Uid="LineBreak_1"/>
                    What you do is place 'markers' exactly on the correct timing of sounds. These markers can be hit objects, bookmarks, greenlines and redlines.
                    <LineBreak x:Uid="LineBreak_2"/>
                    Timing Helper will then adjust BPM and/or add redlines to make every marker be snapped.
                  </TextBlock>
                    </materialDesign:PopupBox>
                  <materialDesign:PopupBox x:Uid="materialDesign:PopupBox_2" Margin="0,10,10,10" VerticalAlignment="Bottom" ToolTip="Click me!">
                      <materialDesign:PopupBox.ToggleContent>
                          <materialDesign:PackIcon x:Uid="materialDesign:PackIcon_2" Kind="LightningBoltCircle" Width="24" Height="24" Foreground="{DynamicResource PrimaryHueLightBrush}"/>
                      </materialDesign:PopupBox.ToggleContent>
                      <TextBlock x:Uid="TextBlock_3" TextWrapping="Wrap" MaxWidth="600" Padding="5">
                          This tool is compatible with QuickRun!
                      </TextBlock>
                  </materialDesign:PopupBox>
                </StackPanel>

                <CheckBox x:Uid="ObjectsBox" x:Name="ObjectsBox" Content="Cover objects" IsChecked="{Binding Objects}" Margin="0,20,0,0"
                          ToolTip="Count hit objects as markers."/>
                <CheckBox x:Uid="BookmarkBox" x:Name="BookmarkBox" Content="Cover bookmarks" IsChecked="{Binding Bookmarks}"
                          ToolTip="Count bookmarks as markers."/>
                <CheckBox x:Uid="GreenlinesBox" x:Name="GreenlinesBox" Content="Cover greenlines" IsChecked="{Binding Greenlines}"
                          ToolTip="Count green lines as markers."/>
                <CheckBox x:Uid="RedlinesBox" x:Name="RedlinesBox" Content="Cover redlines" IsChecked="{Binding Redlines}"
                          ToolTip="Count red lines as markers."/>
                <CheckBox x:Uid="OmitBarlineBox" x:Name="OmitBarlineBox" Content="Omit first barline on new redlines" IsChecked="{Binding OmitBarline}"
                          ToolTip="Omit first barline on new red lines."/>

                <TextBox x:Uid="LeniencyBox" x:Name="LeniencyBox" Width="400" HorizontalAlignment="Left" Margin="0,20,0,0"
                    Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Leniency (ms)"
                    ToolTip="Maximum time in milliseconds that the timing generated by Timing Helper can be off from the markers. Use this to account for your own inaccuracy in timing the markers and to get more natural BPM values.">
                    <TextBox.Text>
                        <Binding x:Uid="Binding_1" Path="Leniency" Mode="TwoWay" UpdateSourceTrigger="LostFocus"  NotifyOnValidationError="True">
                            <Binding.Converter>
                                <domain:DoubleToStringConverter x:Uid="domain:DoubleToStringConverter_2"/>
                            </Binding.Converter>
                            <Binding.ValidationRules>
                                <domain:IsGreaterOrEqualValidationRule x:Uid="domain:IsGreaterOrEqualValidationRule_1">
                                    <domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                        <domain:DoubleWrapper x:Uid="domain:DoubleWrapper_1" Value="0"/>
                                    </domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                </domain:IsGreaterOrEqualValidationRule>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBox x:Uid="TemporalBox" x:Name="TemporalBox" Width="400" HorizontalAlignment="Left" Margin="0,10,0,0"
                    Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Beats between every marker" 
                    ToolTip="Timing Helper will adjust the timing such that the number of beats between every marker is equal to this value. It will do nothing for the value -1."
                    Text="{Binding BeatsBetween, Converter={StaticResource DoubleToStringConverter}, ConverterParameter=-1}">
                </TextBox>

                <TextBlock x:Uid="TextBlock_4" Text="Signatures" Margin="0,20,0,0" FontSize="14" FontWeight="Bold"
                           ToolTip="Beat snap divisors for resnapping."/>
                <TextBox x:Uid="TextBox_1" Text="{Binding BeatDivisors, Converter={StaticResource BeatDivisorArrayToStringConverter}}" 
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         HorizontalAlignment="Left" MinWidth="100" FontSize="14" Cursor="Hand"
                         materialDesign:HintAssist.Hint="Beat divisors"
                         ToolTip="Input any number of beat divisors here separated with commas. Example: 1/4, 1/12, 1/7, 4/5, 0.13435622499"/>
            </StackPanel>

            <Viewbox x:Uid="Viewbox_1" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="70" Margin="10">
                <Button
                    x:Uid="Button_1" IsEnabled="{Binding ElementName=This, Path=CanRun}"
                    Style="{StaticResource MaterialDesignFloatingActionButton}"
                    Click="Start_Click"
                    ToolTip="Run this tool.">
                    <materialDesign:PackIcon
                        x:Uid="materialDesign:PackIcon_3" Kind="Play" Height="36" Width="36" />
                </Button>
            </Viewbox>
        </Grid>
        <Grid x:Uid="SecondGrid" Name="SecondGrid" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Uid="ColumnDefinition_1" Width="Auto"/>
                <ColumnDefinition x:Uid="ColumnDefinition_2"/>
            </Grid.ColumnDefinitions>
            <Grid x:Uid="Grid_1" Grid.Column="0">
                <WrapPanel x:Uid="WrapPanel_1" VerticalAlignment="Bottom">
                    <TextBlock x:Uid="TextBlock_5" TextWrapping="NoWrap" Text="Made by OliBomby" FontWeight="Bold" Opacity="0.58"/>
                </WrapPanel>
            </Grid>
            <Grid x:Uid="Grid_2" Grid.Column="1">
                <ProgressBar x:Uid="ProgressBar_1" Value="{Binding ElementName=This, Path=Progress}" Margin="20,0,20,0" Height="20" Background="{x:Null}" BorderBrush="{x:Null}"/>
            </Grid>
        </Grid>
    </Grid>
</local:SingleRunMappingTool>
