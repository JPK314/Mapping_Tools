<local:SingleRunMappingTool x:Uid="This" x:Class="Mapping_Tools.Views.HitsoundPreviewHelper.HitsoundPreviewHelperView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Mapping_Tools.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:domain="clr-namespace:Mapping_Tools.Components.Domain"
             x:Name="This"
             mc:Ignorable="d" Width="900" Height="700">
    <UserControl.Resources>
        <domain:DoubleToStringConverter x:Uid="domain:DoubleToStringConverter_1" x:Key="D2SConverter"/>
        <domain:SampleSetToStringConverter x:Uid="domain:SampleSetToStringConverter_1" x:Key="SS2SConverter"/>
        <domain:HitsoundToStringConverter x:Uid="domain:HitsoundToStringConverter_1" x:Key="HS2SConverter"/>
    </UserControl.Resources>
    <Grid x:Uid="MasterGrid" Name="MasterGrid">
        <Grid.RowDefinitions>
            <RowDefinition x:Uid="RowDefinition_1" Height="*"/>
            <RowDefinition x:Uid="RowDefinition_2" Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid x:Uid="FirstGrid" Name="FirstGrid" Grid.Row="0">
            <Grid x:Uid="Grid_1" Margin="0,0,120,0">
                <Grid.RowDefinitions>
                    <RowDefinition x:Uid="RowDefinition_3" Height="Auto"/>
                    <RowDefinition x:Uid="RowDefinition_4" Height="*"/>
                    <RowDefinition x:Uid="RowDefinition_5" Height="Auto"/>
                </Grid.RowDefinitions>


              <StackPanel x:Uid="StackPanel_1" Orientation="Horizontal" Grid.Row="0">
                <TextBlock x:Uid="TextBlock_1" FontSize="40" FontWeight="Bold" Foreground="{DynamicResource PrimaryHueMidBrush}">
                  <Run x:Uid="Run_1" Text="Hitsound Preview Helper"/>
                </TextBlock>
                    <materialDesign:PopupBox x:Uid="materialDesign:PopupBox_1" Margin="10" VerticalAlignment="Bottom" ToolTip="Click me!">
                  <materialDesign:PopupBox.ToggleContent>
                    <materialDesign:PackIcon x:Uid="materialDesign:PackIcon_1" Kind="HelpCircle" Width="24" Height="24" Foreground="{DynamicResource SecondaryAccentBrush}"/>
                  </materialDesign:PopupBox.ToggleContent>
                  <TextBlock x:Uid="TextBlock_2" TextWrapping="Wrap" MaxWidth="600" Padding="5">
                    Hitsound Preview Helper helps by placing hitsounds on all the objects of the current map based on the positions of the objects. That way you can hear the hitsounds play while you hitsound without having to assign them manually and later import them to Hitsound Studio.
                    <LineBreak x:Uid="LineBreak_1"/>
                    This tool is meant to help a very specific hitsounding workflow. If you hitsound by placing circles on different parts on the screen and treat each position as a different layer of hitsounds. For example using a mania map and have each column represent a different sound.
                  </TextBlock>
                    </materialDesign:PopupBox>
                  <materialDesign:PopupBox x:Uid="materialDesign:PopupBox_2" Margin="0,10,10,10" VerticalAlignment="Bottom" ToolTip="Click me!">
                      <materialDesign:PopupBox.ToggleContent>
                          <materialDesign:PackIcon x:Uid="materialDesign:PackIcon_2" Kind="LightningBoltCircle" Width="24" Height="24" Foreground="{DynamicResource PrimaryHueLightBrush}"/>
                      </materialDesign:PopupBox.ToggleContent>
                      <TextBlock x:Uid="TextBlock_3" TextWrapping="Wrap" MaxWidth="600" Padding="5">
                          This tool is compatible with QuickRun!
                      </TextBlock>
                  </materialDesign:PopupBox>
                </StackPanel>
              
                <DataGrid
                    x:Uid="DataGrid_1" Grid.Row="1"
                    Margin="0 18 0 0"
                    ItemsSource="{Binding Items}"
                    CanUserSortColumns="True"
                    CanUserAddRows="False"
                    AutoGenerateColumns="False"
                    materialDesign:DataGridAssist.CellPadding="13 8 8 8"
                    materialDesign:DataGridAssist.ColumnHeaderPadding="8"
                    VerticalScrollBarVisibility="Auto">
                    <DataGrid.Resources>
                        <Style x:Uid="Style_1" TargetType="DataGridRow" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                            <Setter x:Uid="Setter_1" Property="IsSelected"
                                Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn
                            x:Uid="DataGridCheckBoxColumn_1" Binding="{Binding IsSelected}"
                            ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                            EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                            <DataGridCheckBoxColumn.Header>
                                <!--padding to allow hit test to pass thru for sorting -->
                                <Border
                                    x:Uid="Border_1" Background="Transparent"
                                    Padding="6 0 6 0"
                                    HorizontalAlignment="Center">
                                    <CheckBox
                                        x:Uid="CheckBox_1" HorizontalAlignment="Center"
                                        DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}"
                                        IsChecked="{Binding IsAllItemsSelected}" />
                                </Border>
                            </DataGridCheckBoxColumn.Header>
                        </DataGridCheckBoxColumn>
                        <materialDesign:MaterialDataGridTextColumn
                            x:Uid="materialDesign:MaterialDataGridTextColumn_1" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                            Header="Name"
                            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" />
                        <materialDesign:MaterialDataGridTextColumn
                            x:Uid="materialDesign:MaterialDataGridTextColumn_2" Binding="{Binding Filename, UpdateSourceTrigger=PropertyChanged}"
                            Header="Filename"
                            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" />
                        <materialDesign:MaterialDataGridTextColumn
                            x:Uid="materialDesign:MaterialDataGridTextColumn_3" Binding="{Binding XPos, Converter={StaticResource D2SConverter}, ConverterParameter=-1, UpdateSourceTrigger=PropertyChanged}"
                            Header="X position"
                            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"/>
                        <materialDesign:MaterialDataGridTextColumn
                            x:Uid="materialDesign:MaterialDataGridTextColumn_4" Binding="{Binding YPos, Converter={StaticResource D2SConverter}, ConverterParameter=-1, UpdateSourceTrigger=PropertyChanged}"
                            Header="Y position"
                            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"/>
                        <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
                        <materialDesign:MaterialDataGridComboBoxColumn
                            x:Uid="materialDesign:MaterialDataGridComboBoxColumn_1" Header="SampleSet"
                            SelectedValueBinding="{Binding SampleSet, Converter={StaticResource SS2SConverter}, UpdateSourceTrigger=PropertyChanged}"
                            ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.SampleSets}" />
                        <materialDesign:MaterialDataGridComboBoxColumn
                            x:Uid="materialDesign:MaterialDataGridComboBoxColumn_2" Header="Hitsound"
                            SelectedValueBinding="{Binding Hitsound, Converter={StaticResource HS2SConverter}, UpdateSourceTrigger=PropertyChanged}"
                            ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Hitsounds}" />
                    </DataGrid.Columns>
                </DataGrid>

                <StackPanel
                        x:Uid="StackPanel_2" Grid.Row="2"
                        Margin="5"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Orientation="Horizontal">
                    <Button x:Uid="Button_1" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" ToolTip="Generate rhythm guide." Command="{Binding RhythmGuideCommand}" Margin="5">
                        <materialDesign:PackIcon x:Uid="materialDesign:PackIcon_3" Kind="AlternatingCurrent" Height="24" Width="24" />
                    </Button>
                    <Button x:Uid="Button_2" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" ToolTip="Add a hitsound zone. Hold shift to add current selected coordinates." Command="{Binding AddCommand}" Margin="5">
                        <materialDesign:PackIcon x:Uid="materialDesign:PackIcon_4" Kind="Plus" Height="24" Width="24" />
                    </Button>
                    <Button x:Uid="Button_3" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" ToolTip="Copy selected hitsound zones." Command="{Binding CopyCommand}" Margin="5">
                        <materialDesign:PackIcon x:Uid="materialDesign:PackIcon_5" Kind="ContentCopy" Height="24" Width="24" />
                    </Button>
                    <Button x:Uid="Button_4" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" ToolTip="Remove selected hitsound zones." Command="{Binding RemoveCommand}" Margin="5">
                        <materialDesign:PackIcon x:Uid="materialDesign:PackIcon_6" Kind="Trashcan" Height="24" Width="24" />
                    </Button>
                </StackPanel>
            </Grid>

            <Viewbox x:Uid="Viewbox_1" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="70" Margin="10">
                <Button
                    x:Uid="Button_5" IsEnabled="{Binding ElementName=This, Path=CanRun}"
                    Style="{StaticResource MaterialDesignFloatingActionButton}"
                    Click="Start_Click"
                    ToolTip="Run this tool.">
                    <materialDesign:PackIcon
                        x:Uid="materialDesign:PackIcon_7" Kind="Play" Height="36" Width="36" />
                </Button>
            </Viewbox>
        </Grid>
        <Grid x:Uid="SecondGrid" Name="SecondGrid" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Uid="ColumnDefinition_1" Width="Auto"/>
                <ColumnDefinition x:Uid="ColumnDefinition_2"/>
            </Grid.ColumnDefinitions>
            <Grid x:Uid="Grid_2" Grid.Column="0">
                <WrapPanel x:Uid="WrapPanel_1" VerticalAlignment="Bottom">
                    <TextBlock x:Uid="TextBlock_4" TextWrapping="NoWrap" Text="Made by OliBomby" FontWeight="Bold" Opacity="0.58"/>
                </WrapPanel>
            </Grid>
            <Grid x:Uid="Grid_3" Grid.Column="1">
                <ProgressBar x:Uid="ProgressBar_1" Value="{Binding ElementName=This, Path=Progress}" Margin="20,0,20,0" Height="20" Background="{x:Null}" BorderBrush="{x:Null}"/>
            </Grid>
        </Grid>
    </Grid>
</local:SingleRunMappingTool>
